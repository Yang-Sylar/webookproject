// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gin-gonic/gin"
	"webook/internal/repository"
	"webook/internal/repository/cache"
	"webook/internal/repository/dao"
	"webook/internal/service"
	"webook/internal/web"
	"webook/internal/web/jwt"
	"webook/ioc"
)

// Injectors from wire.go:

func initWebServer() *gin.Engine {
	cmdable := ioc.InitRedis()

	jwtHandler := myjwt.NewJwtHandler(cmdable)

	v := ioc.InitMiddlewares(cmdable, jwtHandler)
	db := ioc.InitDB()
	gormUserDAO := dao.NewUserDAO(db)
	redisUserCache := cache.NewRedisUserCache(cmdable)
	cachedUserRepository := repository.NewUserRepository(gormUserDAO, redisUserCache)
	myUserService := service.NewUserService(cachedUserRepository)
	redisCodeCache := cache.NewRedisCodeCache(cmdable)
	cachedCodeRepository := repository.NewCachedCodeRepository(redisCodeCache)
	smsService := ioc.InitSMSService()
	myCodeService := service.NewCodeService(cachedCodeRepository, smsService)

	userHandler := web.NewUserHandler(myUserService, myCodeService, cmdable, jwtHandler)

	wechatService := ioc.InitOAuth2WechatService()
	oAuth2WechatHandler := web.NewOAuth2WechatHandler(wechatService)
	engine := ioc.InitGin(v, userHandler, oAuth2WechatHandler)
	return engine
}
